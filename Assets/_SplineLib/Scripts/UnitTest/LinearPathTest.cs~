using UnityEngine;
using System.Collections;
using System.Collections.Generic;

public class LinearPathTest : UUnitTestCase {

	public void TestLinearPath ()
	{
		Vector3[] p1 ={
			new Vector3(0,0,0),
			new Vector3(1,2,3),
		};
		LinearSplineCurve lp = new LinearSplineCurve();
		lp.Init(p1);
		
		Vector3 expectedResult = new Vector3(.5f, 1, 1.5f);
		Assert.Equals(expectedResult,lp.GetPosition(0.5f));
		
		expectedResult = new Vector3(.25f, .5f, 0.75f);
		Assert.Equals(expectedResult,lp.GetPosition(0.25f));	
		
		// test start and end conditions
		Assert.Equals(p1[0],lp.GetPosition(0.0f));	
		Assert.Equals(p1[1],lp.GetPosition(1.0f));	
	}
		
	public void TestLinearPathExplicitDistances ()
	{
		Vector3[] p1 = {
			new Vector3(0,0,0),
			new Vector3(0,1,0),
			new Vector3(1,2,1)
		};
		LinearSplineCurve lp = new LinearSplineCurve();
		lp.Init(p1);
		Vector3 expectedResult = new Vector3(1f/3f, 1+1f/3f, 1f/3f);
		Assert.Equals(expectedResult,lp.GetPosition(0.5f));
		
		expectedResult = new Vector3(0f, 1f, 0f);
		Assert.Equals(expectedResult,lp.GetPosition(0.25f));	
		
		// test start and end conditions
		Assert.Equals(Vector3.zero,lp.GetPosition(0.0f));
		Vector3 endpoint = new Vector3(1,2,1);
		Assert.Equals(endpoint,lp.GetPosition(1.0f));
	}		
	
	public void TestLength(){
		Vector3[] p1 = {
			new Vector3(0,0,0),
			new Vector3(0,1,0)
		};
		LinearSplineCurve lp = new LinearSplineCurve();
		lp.Init(p1);
		Assert.Equals(1.0f, lp.totalLength);
	}
}
